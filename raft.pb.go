// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: raft.proto

package main

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageType int32

const (
	MessageType_MsgBeat MessageType = 0
	MessageType_MsgVote MessageType = 1
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MsgBeat",
		1: "MsgVote",
	}
	MessageType_value = map[string]int32{
		"MsgBeat": 0,
		"MsgVote": 1,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_raft_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_raft_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{0}
}

type StateType int32

const (
	StateType_Follower  StateType = 0
	StateType_Leader    StateType = 1
	StateType_Candidate StateType = 2
)

// Enum value maps for StateType.
var (
	StateType_name = map[int32]string{
		0: "Follower",
		1: "Leader",
		2: "Candidate",
	}
	StateType_value = map[string]int32{
		"Follower":  0,
		"Leader":    1,
		"Candidate": 2,
	}
)

func (x StateType) Enum() *StateType {
	p := new(StateType)
	*p = x
	return p
}

func (x StateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateType) Descriptor() protoreflect.EnumDescriptor {
	return file_raft_proto_enumTypes[1].Descriptor()
}

func (StateType) Type() protoreflect.EnumType {
	return &file_raft_proto_enumTypes[1]
}

func (x StateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateType.Descriptor instead.
func (StateType) EnumDescriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{1}
}

type LinkStateType int32

const (
	LinkStateType_Connecting   LinkStateType = 0
	LinkStateType_Connected    LinkStateType = 1
	LinkStateType_Disconnected LinkStateType = 2
)

// Enum value maps for LinkStateType.
var (
	LinkStateType_name = map[int32]string{
		0: "Connecting",
		1: "Connected",
		2: "Disconnected",
	}
	LinkStateType_value = map[string]int32{
		"Connecting":   0,
		"Connected":    1,
		"Disconnected": 2,
	}
)

func (x LinkStateType) Enum() *LinkStateType {
	p := new(LinkStateType)
	*p = x
	return p
}

func (x LinkStateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkStateType) Descriptor() protoreflect.EnumDescriptor {
	return file_raft_proto_enumTypes[2].Descriptor()
}

func (LinkStateType) Type() protoreflect.EnumType {
	return &file_raft_proto_enumTypes[2]
}

func (x LinkStateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkStateType.Descriptor instead.
func (LinkStateType) EnumDescriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{2}
}

type Raft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     MessageType `protobuf:"varint,1,opt,name=Type,proto3,enum=main.MessageType" json:"Type,omitempty"`
	Term     int64       `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	VotedFor int64       `protobuf:"varint,3,opt,name=VotedFor,proto3" json:"VotedFor,omitempty"`
	Log      string      `protobuf:"bytes,4,opt,name=Log,proto3" json:"Log,omitempty"`
}

func (x *Raft) Reset() {
	*x = Raft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Raft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Raft) ProtoMessage() {}

func (x *Raft) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Raft.ProtoReflect.Descriptor instead.
func (*Raft) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{0}
}

func (x *Raft) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MsgBeat
}

func (x *Raft) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Raft) GetVotedFor() int64 {
	if x != nil {
		return x.VotedFor
	}
	return 0
}

func (x *Raft) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentStateType StateType `protobuf:"varint,1,opt,name=CurrentStateType,proto3,enum=main.StateType" json:"CurrentStateType,omitempty"`
	ElectionTimeout  int64     `protobuf:"varint,2,opt,name=ElectionTimeout,proto3" json:"ElectionTimeout,omitempty"`
	HeartBeatTimeout int64     `protobuf:"varint,3,opt,name=HeartBeatTimeout,proto3" json:"HeartBeatTimeout,omitempty"`
	VoteCount        int64     `protobuf:"varint,4,opt,name=VoteCount,proto3" json:"VoteCount,omitempty"`
	Term             int64     `protobuf:"varint,5,opt,name=Term,proto3" json:"Term,omitempty"`
	VoteFor          int64     `protobuf:"varint,6,opt,name=VoteFor,proto3" json:"VoteFor,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetCurrentStateType() StateType {
	if x != nil {
		return x.CurrentStateType
	}
	return StateType_Follower
}

func (x *Node) GetElectionTimeout() int64 {
	if x != nil {
		return x.ElectionTimeout
	}
	return 0
}

func (x *Node) GetHeartBeatTimeout() int64 {
	if x != nil {
		return x.HeartBeatTimeout
	}
	return 0
}

func (x *Node) GetVoteCount() int64 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

func (x *Node) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Node) GetVoteFor() int64 {
	if x != nil {
		return x.VoteFor
	}
	return 0
}

var File_raft_proto protoreflect.FileDescriptor

var file_raft_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61,
	0x69, 0x6e, 0x22, 0x6f, 0x0a, 0x04, 0x52, 0x61, 0x66, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4c, 0x6f, 0x67, 0x22, 0xe5, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x10,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x65, 0x72,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x2a, 0x27, 0x0a, 0x0b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x73,
	0x67, 0x42, 0x65, 0x61, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x56, 0x6f,
	0x74, 0x65, 0x10, 0x01, 0x2a, 0x34, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x10, 0x02, 0x2a, 0x40, 0x0a, 0x0d, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x02, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x2f, 0x3b, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_raft_proto_rawDescOnce sync.Once
	file_raft_proto_rawDescData = file_raft_proto_rawDesc
)

func file_raft_proto_rawDescGZIP() []byte {
	file_raft_proto_rawDescOnce.Do(func() {
		file_raft_proto_rawDescData = protoimpl.X.CompressGZIP(file_raft_proto_rawDescData)
	})
	return file_raft_proto_rawDescData
}

var file_raft_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_raft_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_raft_proto_goTypes = []interface{}{
	(MessageType)(0),   // 0: main.MessageType
	(StateType)(0),     // 1: main.StateType
	(LinkStateType)(0), // 2: main.LinkStateType
	(*Raft)(nil),       // 3: main.Raft
	(*Node)(nil),       // 4: main.Node
}
var file_raft_proto_depIdxs = []int32{
	0, // 0: main.Raft.Type:type_name -> main.MessageType
	1, // 1: main.Node.CurrentStateType:type_name -> main.StateType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_raft_proto_init() }
func file_raft_proto_init() {
	if File_raft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_raft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Raft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_raft_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_raft_proto_goTypes,
		DependencyIndexes: file_raft_proto_depIdxs,
		EnumInfos:         file_raft_proto_enumTypes,
		MessageInfos:      file_raft_proto_msgTypes,
	}.Build()
	File_raft_proto = out.File
	file_raft_proto_rawDesc = nil
	file_raft_proto_goTypes = nil
	file_raft_proto_depIdxs = nil
}
